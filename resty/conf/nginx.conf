worker_processes  2;
error_log logs/error.log;
events {
	worker_connections 1024;
}
http {
	server {
   	listen 8060;
		location /sms {
			default_type text/html;
         content_by_lua '
         	local redis = require "resty.redis"
         	json = require "cjson"
		
				local red = redis:new()
				red:set_timeout(1000) -- 1 sec
				local ok, err = red:connect("127.0.0.1", 6379)
	
				if not ok then
   				ngx.say("failed to connect: ", err)
   				return
				end
	
				ngx.req.read_body()
				
				args = ngx.req.get_body_data()

				if not args then
		    		ngx.say("failed to get post args: ", err)
		    		return
				end
				
				local ans, err = red:lpush("sms_list", args )
		
				if not ans then
		    		ngx.say("failed to run lpush: ", err) 
					return
				end
    
				red:close()
					
            ';
		}

		location /email {
			default_type text/html;
         content_by_lua '

         	local redis = require "resty.redis"
         	json = require "cjson"
		
				local red = redis:new()
				red:set_timeout(1000) -- 1 sec
				local ok, err = red:connect("127.0.0.1", 6379)
	
				if not ok then
   				ngx.say("failed to connect: ", err)
   				return
				end
	
				ngx.req.read_body()
				args = ngx.req.get_body_data()

				if not args then
		    		ngx.say("failed to get post args: ", err)
		    		return
				end
				
				local ans, err = red:lpush("email_list", args )
		
				if not ans then
		    		ngx.say("failed to run lpush: ", err) 
					return
				end
    
				red:close()

         ';
		}

	}
}
